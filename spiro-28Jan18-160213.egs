%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%Title: Window .102228808L
%%CreationDate: Sun Jan 28 16:02:13 2018
%%BoundingBox: -153 153 766 639
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/Euro/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.7493 0.7493 scale
3 -323 translate
-616 646 moveto 610 646 lineto 610 0 lineto -616 0 lineto closepath clip newpath
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
368.274363002087 75 moveto
367.746542242765 78.1972015341868 lineto
366.182801988321 81.4951061217923 lineto
363.641182534164 84.9858825135306 lineto
360.214734304341 88.7451783892524 lineto
356.02623059476 92.8251945111265 lineto
351.221225919682 97.2492670119049 lineto
345.959885995963 102.008310946681 lineto
340.408090289399 107.059362087021 lineto
334.728351867743 112.326322942375 lineto
329.071109343778 117.702881298226 lineto
323.566921335407 123.057433723568 lineto
318.320036640747 128.23972096769 lineto
313.403726788837 133.088774743856 lineto
308.857657165163 137.441692767341 lineto
304.687445395535 141.142706219454 lineto
300.866419030595 144.051984331004 lineto
297.339447300999 146.053635738098 lineto
294.028592343042 147.062414741369 lineto
290.840211867312 147.028719595715 lineto
287.673054808637 145.941574575022 lineto
284.426829674235 143.829411306862 lineto
281.010695940444 140.758600079474 lineto
277.351133760987 136.829820099003 lineto
273.398686135253 132.172490440073 lineto
269.133138125819 126.937602450621 lineto
264.566795331117 121.289392259537 lineto
259.745642543566 115.396362722649 lineto
254.748295974739 109.42220324783 lineto
249.682800373036 103.517161044193 lineto
244.681457219409 97.8103881356463 lineto
239.893993577238 92.4037267888366 lineto
235.479485419758 87.3673056702639 lineto
231.59752787715 82.7372056867504 lineto
228.399192941961 78.5153251265426 lineto
226.018329747843 74.671436446093 lineto
224.563742676769 71.1472903729037 lineto
224.112729476786 67.8624954126543 lineto
224.706378572136 64.7217902882455 lineto
226.346916965251 61.6232401699924 lineto
228.997274250223 58.4668301653113 lineto
232.582892088763 55.1629049882885 lineto
236.995670490356 51.6399135485519 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.345 0.075 0.918 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
grestore
gsave
16 320 moveto
14 322 lineto
10 321 lineto
7 324 lineto
9 327 lineto
8 329 lineto
5 326 lineto
1 327 lineto
-3 325 lineto
-6 328 lineto
-8 326 lineto
-5 324 lineto
-7 320 lineto
-5 316 lineto
-8 314 lineto
-6 312 lineto
-3 315 lineto
1 313 lineto
5 314 lineto
8 311 lineto
9 313 lineto
7 316 lineto
10 319 lineto
14 318 lineto
16 320 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
16 320 moveto
14 322 lineto
10 321 lineto
7 324 lineto
9 327 lineto
8 329 lineto
5 326 lineto
1 327 lineto
-3 325 lineto
-6 328 lineto
-8 326 lineto
-5 324 lineto
-7 320 lineto
-5 316 lineto
-8 314 lineto
-6 312 lineto
-3 315 lineto
1 313 lineto
5 314 lineto
8 311 lineto
9 313 lineto
7 316 lineto
10 319 lineto
14 318 lineto
16 320 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
236.995670490356 51.6399135485519 moveto
242.099810950878 47.8509607728688 lineto
247.739200083504 43.7787435918353 lineto
253.745883044163 39.4385490482322 lineto
259.949109660972 34.8791136320563 lineto
266.184401837812 30.1812766877461 lineto
272.302090640265 25.4544987564088 lineto
278.174805488874 20.8314494281423 lineto
283.703463958578 16.4609903717499 lineto
288.821404701976 12.4999801495454 lineto
293.496422130214 9.10440193313457 lineto
297.730592479275 6.42035867321061 lineto
301.55791861827 4.575489933526 lineto
305.039956859741 3.67133986551164 lineto
308.259714663746 3.77714820097765 lineto
311.314215680912 4.92544924296118 lineto
314.306211371688 7.10975302613411 lineto
317.335571326422 10.2844549707677 lineto
320.490904108766 14.3669833991585 lineto
323.841945731797 19.2420567176903 lineto
327.433204668883 24.7677924265462 lineto
331.279273598818 30.7832964456619 lineto
335.362113781243 37.1172705914016 lineto
339.630494539556 43.5971140255779 lineto
344.001635468458 50.0579649699615 lineto
348.364961067615 56.3511337609865 lineto
352.587745107859 62.3514171057359 lineto
356.522303395797 67.9628537744758 lineto
360.014296096727 73.1225795483519 lineto
362.911630471883 77.802557965216 lineto
365.073416162422 82.0090958912344 lineto
366.378420425703 85.780190956345 lineto
366.732500304123 89.1808928508453 lineto
366.074550757039 92.2969840020059 lineto
364.380598468765 95.2273895587873 lineto
361.665784738017 98.0758054230255 lineto
357.984110504894 100.94208138173 lineto
353.425954137216 103.913911217739 lineto
348.113509543592 107.059362087021 lineto
342.194420008996 110.420722671318 lineto
335.83399392899 114.010066928401 lineto
329.206475478665 117.806822811669 lineto
322.485900805172 121.757509798155 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.345 0.075 0.918 setrgbcolor AdjustColor
stroke
grestore
gsave
322.485900805172 121.757509798155 moveto
315.837095011711 125.777673255381 lineto
309.407355480965 129.755906038288 lineto
303.319323578474 133.559716797296 lineto
297.665472190929 137.042888439769 lineto
292.504535530118 140.053876238696 lineto
287.860086451448 142.444729071224 lineto
283.721332728945 144.079983307708 lineto
280.046065612155 144.844979080034 lineto
276.76556014709 144.653083034749 lineto
273.791105489221 143.451368097607 lineto
271.021742304579 141.224395126743 lineto
268.352709627096 137.99585776165 lineto
265.684059856894 133.827983062584 lineto
262.928890656222 128.818718534766 lineto
260.020666939956 123.096872281391 lineto
256.919163442758 116.815498880982 lineto
253.614644910621 110.143931329569 lineto
250.130011425934 103.258942342171 lineto
246.520763862614 96.3355713264216 lineto
242.87278105291 89.5381731382828 lineto
239.298037435892 83.0122300831404 lineto
235.928519217189 76.8774204516481 lineto
232.908710359806 71.2223581771678 lineto
230.387109998346 66.101313864747 lineto
228.507304504526 61.533103956247 lineto
227.399146590269 57.5021998370219 lineto
227.170588693138 53.9619706428473 lineto
227.900678755235 50.8398409688293 lineto
229.634155800756 48.0440258499216 lineto
232.377984820212 45.4714076569581 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.345 0.075 0.918 setrgbcolor AdjustColor
stroke
grestore
gsave
248.377984820212 45.4714076569581 moveto
246.377984820212 47.4714076569581 lineto
242.377984820212 46.4714076569581 lineto
239.377984820212 49.4714076569581 lineto
241.377984820212 52.4714076569581 lineto
240.377984820212 54.4714076569581 lineto
237.377984820212 51.4714076569581 lineto
233.377984820212 52.4714076569581 lineto
229.377984820212 50.4714076569581 lineto
226.377984820212 53.4714076569581 lineto
224.377984820212 51.4714076569581 lineto
227.377984820212 49.4714076569581 lineto
225.377984820212 45.4714076569581 lineto
227.377984820212 41.4714076569581 lineto
224.377984820212 39.4714076569581 lineto
226.377984820212 37.4714076569581 lineto
229.377984820212 40.4714076569581 lineto
233.377984820212 38.4714076569581 lineto
237.377984820212 39.4714076569581 lineto
240.377984820212 36.4714076569581 lineto
241.377984820212 38.4714076569581 lineto
239.377984820212 41.4714076569581 lineto
242.377984820212 44.4714076569581 lineto
246.377984820212 43.4714076569581 lineto
248.377984820212 45.4714076569581 lineto
0.345 0.075 0.918 setrgbcolor AdjustColor
eofill
248.377984820212 45.4714076569581 moveto
246.377984820212 47.4714076569581 lineto
242.377984820212 46.4714076569581 lineto
239.377984820212 49.4714076569581 lineto
241.377984820212 52.4714076569581 lineto
240.377984820212 54.4714076569581 lineto
237.377984820212 51.4714076569581 lineto
233.377984820212 52.4714076569581 lineto
229.377984820212 50.4714076569581 lineto
226.377984820212 53.4714076569581 lineto
224.377984820212 51.4714076569581 lineto
227.377984820212 49.4714076569581 lineto
225.377984820212 45.4714076569581 lineto
227.377984820212 41.4714076569581 lineto
224.377984820212 39.4714076569581 lineto
226.377984820212 37.4714076569581 lineto
229.377984820212 40.4714076569581 lineto
233.377984820212 38.4714076569581 lineto
237.377984820212 39.4714076569581 lineto
240.377984820212 36.4714076569581 lineto
241.377984820212 38.4714076569581 lineto
239.377984820212 41.4714076569581 lineto
242.377984820212 44.4714076569581 lineto
246.377984820212 43.4714076569581 lineto
248.377984820212 45.4714076569581 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.345 0.075 0.918 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
